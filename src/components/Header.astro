---
import { Icon } from "astro-icon";
import MicroModal from "micromodal";
// import ThemeSwitcher from "~/components/theme-switcher.astro";

const navItems = [
  { title: "Features", url: "#features" },
  { title: "Compatibility", url: "#compatibility" },
  { title: "Showcase", url: "#showcase" },
];
---

<header
  id="page-header"
  class="main-header"
>
  <a class="header-link" href="#">
    <h1 class="sr-only">Mikel-Jon (Mike) West</h1>
    <Icon name="logo" class="logo" />
    <Icon name="logo-text" class="logo-text" />
  </a>
  <div>
    <div class="nav-wrapper">
      <nav class="navigation">
        <ul class="nav-list">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="nav-link" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="menu-icon" />
      </button>
      <!-- <ThemeSwitcher /> -->
    </div>
    <div id="menu-modal" class="hidden modal" aria-hidden="true">
      <div class="menu-wrapper">
        <div class="menu-dialog" role="dialog" aria-modal="true">
          <header class="menu-header">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="menu-logo-text">
            <Icon name="logo-text" class="h-16" />
          </div>
          <nav>
            <ul class="menu-list">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="menu-link" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  

  const menuModalId = "menu-modal";

  const header: HTMLElement = document.querySelector("#page-header");
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>

    .main-header {
        display: flex; 
position: absolute; 
bottom: 0; 
z-index: 10; 
padding-top: 1rem;
padding-bottom: 1rem; 
padding-left: 2rem;
padding-right: 2rem; 
color: var(--t-subdue); 
justify-content: space-between; 
align-items: center; 
width: 100%; 
border-bottom-width: 1px; 
border-color: transparent; 
    }

    .header-link {
        display: flex; 
align-items: center; 
gap: 0.75rem; 
    }

    .header-link:hover {
        color: var(--t-active);
    }

    .sr-only {
        position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
    }

    .logo {
        height: 2.5rem; 
    }

    .logo-text {
        display: none; 
height: 1rem; 
    }

@media (min-width: 640px) { 
    .logo-text {
  display: block; 
    }

    .navigation {
        display: block;
    }

    .btn {
        display: none;
    }
 }

 .nav-wrapper {
    display: flex; 
align-items: center; 
gap: 1.5rem; 
 }

 .navigation {
    display: none;
 }

 .nav-list {
    display: flex; 
align-items: center; 
gap: 1.5rem; 
 }

 .nav-link {
    font-size: 0.875rem;
line-height: 1.25rem; 
 }

 .menu-icon {
    height: 2rem; 
 }

 .hidden {
    display: none; 
 }

 .menu-wrapper {
    position: fixed; 
top: 0;
right: 0;
bottom: 0;
left: 0; 
padding-top: 1rem;
padding-bottom: 1rem; 
padding-left: 2rem;
padding-right: 2rem; 
color: var(--t-subdue); 
 }

 .menu-dialog {
    margin-top: 1rem;
 }

 .menu-header {
    text-align: right; 
 }

 .menu-logo-text {
    display: flex; 
justify-content: center; 
 }

 .menu-list {
    display: flex; 
flex-direction: column; 
 }

 .menu-link {
    display: block; 
padding-top: 1rem;
padding-bottom: 1rem; 
font-size: 1.25rem;
line-height: 1.75rem; 
text-align: center; 
 }

  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply text-default bg-default border-default;
  }
  .modal.is-open {
    @apply block;
  }

  .h-8 {
    height: 2rem;
  }

  .h-16 {
    height: 4rem;
  }
</style>